import { QueryClient, QueryClientProvider } from '@tanstack/react-query'
import { ReactQueryDevtools } from '@tanstack/react-query-devtools'

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";


import { Inter } from 'next/font/google';
import { AppProvider } from '@/contexts/AppContext';
import { TooltipProvider } from '@/contexts/TooltipContext';

const inter = Inter({
  subsets: ['latin'],
  variable: '--font-inter',
});


const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      staleTime: 60 * 60 * 1000, // 1 hour
      refetchInterval: 60 * 60 * 1000, // Auto refetch every hour
    },
  },
})

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" >
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${inter.variable} antialiased`}
      >
        <AppProvider>
          <TooltipProvider>
            {children}   
          </TooltipProvider>     
        </AppProvider>
      </body>
    </html>
  );
}
